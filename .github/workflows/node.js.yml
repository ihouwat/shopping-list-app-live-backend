# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  mask-secrets:
    # it seems secrets are being masked, but, just in case...
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "::add-mask::${{ secrets.SNYK_TOKEN }}"
          echo "::add-mask::${{ secrets.HEROKU_API_KEY }}"
          echo "::add-mask::${{ secrets.HEROKU_APP_NAME }}"
          echo "::add-mask::${{ secrets.HEROKU_EMAIL }}"
          echo "::add-mask::${{ secrets.POSTMAN_API_KEY }}"
          echo "::add-mask::${{ secrets.RAINFOREST_API_TOKEN }}"

  security:
    runs-on: ubuntu-latest
    needs: mask-secrets
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test

  build:
    runs-on: ubuntu-latest
    needs: security

    strategy:
      matrix:
        node-version: [14.16.0]
        # See supported Node.js release schedule at https://nodejs.org/en/a bout/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run lint
    - run: npm test
    - run: npm run build --if-present

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Staging Env Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}

  automated-api-tests:
    needs: deploy-staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests
        run: |
          postman collection run "${{ github.workspace }}/postman/collections/Shopping App_e8e8ded3-d3ed-4834-a6b2-7b49dd0d3f7c.json" -e "10202594-2bc64fdd-8320-4cd3-bb64-0e727e1441f4"

  visual-regression-test:
    needs: automated-api-tests
    runs-on: ubuntu-latest
    steps:
      - name: Rainforest
        uses: rainforestapp/github-action@master
        with:
          token: ${{ secrets.RAINFOREST_API_TOKEN }}
          run_group_id: 14268
          automation_max_retries: 0
          conflict: cancel
